------ GROUP BY, HAVING BY, 서브쿼리 구문 -----

SELECT * FROM EMPLOYEES;

SELECT SUM(SALARY) FROM EMPLOYEES;
SELECT SUM(COMMISSION_PCT) FROM EMPLOYEES;

SELECT AVG(SALARY) FROM EMPLOYEES;
SELECT AVG(COMMISSION_PCT) FROM EMPLOYEES;

SELECT COUNT(SALARY) FROM EMPLOYEES;
SELECT COUNT(COMMISSION_PCT) FROM EMPLOYEES;

SELECT SUM(SALARY), AVG(SALARY), COUNT(SALARY) FROM EMPLOYEES;

SELECT SUM(COMMISSION_PCT), AVG(COMMISSION_PCT), COUNT(COMMISSION_PCT) FROM EMPLOYEES;

-- 사원들의 1인당 COMMISSION_PCT 평균
SELECT SUM(COMMISSION_PCT)/COUNT(COMMISSION_PCT) FROM EMPLOYEES;

SELECT MAX(SALARY), MIN(SALARY) FROM EMPLOYEES;

-- 회사에서 가장 먼저 입사한 사원의 입사일, 제일 늦게 입사한 사원의 입사일
SELECT MIN(HIRE_DATE), MAX(HIRE_DATE) FROM EMPLOYEES;

SELECT EMPLOYEE_ID FROM EMPLOYEES;

SELECT COMMISSION_PCT, NVL(COMMISSION_PCT, 0) FROM EMPLOYEES;

SELECT COUNT(COMMISSION_PCT), COUNT(NVL(COMMISSION_PCT, 0)) FROM EMPLOYEES;

SELECT COMMISSION_PCT, NVL2(COMMISSION_PCT, 1, 0) FROM EMPLOYEES;

-- 사원의 사원번호, 성, 이름, 월급의 평균 급여보다 많이 받는 직원들을 조회
SELECT * FROM EMPLOYEES;
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY > 6461;
SELECT AVG(SALARY) FROM EMPLOYEES;

-- 부서별 월급 평균
SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

-- 부서별 월급 평균, 부서별 총 급여 합계, 부서별 인원수, 부서별 제일 큰 월급, 부서별 제일 작은 월급
SELECT DEPARTMENT_ID, AVG(SALARY), SUM(SALARY), COUNT(EMPLOYEE_ID), MAX(SALARY), MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

-- 부서별 월급 합계가 50000 이상이고 부서 ID가 50이상인 부서만 내림차순으로 조회
SELECT SUM(SALARY) SS, DEPARTMENT_ID    -- 5
FROM EMPLOYEES                          -- 1
WHERE DEPARTMENT_ID >= 50               -- 2
GROUP BY DEPARTMENT_ID                  -- 3
HAVING SUM(SALARY) >= 50000             -- 4
ORDER BY SS DESC;                       -- 6

------------------------------ SubQuery문 ------------------------------

-- 사번이 198인 사원이 근무하는 부서명
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198;
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID = 50;
--> SubQuery문
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198);

-- 사번이 198인 사원이 근무하는 부서가 있는 도시가 속해 있는 나라명
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198;
SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 50;
SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID = 1500;
SELECT COUNTRY_NAME FROM COUNTRIES WHERE COUNTRY_ID = 'US';
--> SubQuery문
SELECT COUNTRY_NAME FROM COUNTRIES WHERE COUNTRY_ID = (SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID = 
(SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198)));

-- 사번이 198인 사원이 근무하는 부서가 있는 도시가 속해 있는 나라가 있는 대륙 정보
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198;
SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 50;
SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID = 1500;
SELECT REGION_ID FROM COUNTRIES WHERE COUNTRY_ID = 'US';
SELECT REGION_NAME FROM REGIONS WHERE REGION_ID = 2;
--> SubQuery문
SELECT REGION_NAME FROM REGIONS WHERE REGION_ID =
    (
        SELECT REGION_ID FROM COUNTRIES WHERE COUNTRY_ID =
        (
            SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID =
            (   
                SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID =
                (
                    SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198
                )
            )
        )
    );

-- LAST_NAME이 Khoo인 사람의 근무하는 부서명
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME = 'Khoo';
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID = 30;

-- 사원번호가 199번인 사원의 매니저가 근무하는 부서의 부서번호 조회
SELECT MANAGER_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 199;
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 124;

-- 사원번호가 199번인 사원의 매니저가 근무하는 부서가 있는 나라명 출력
SELECT MANAGER_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 199;
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 124;
SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 50;
SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID = 1500;
SELECT COUNTRY_NAME FROM COUNTRIES WHERE COUNTRY_ID = 'US';

-- 사원들 중에서 월급이 가장 적은 사원이 근무하는 도시명
SELECT MIN(SALARY) FROM EMPLOYEES;
SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE SALARY = 2100;
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 132;
SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 50;
SELECT CITY FROM LOCATIONS WHERE LOCATION_ID = 1500;

-- 부서명이 IT인 부서에 근무하는 사원들의 모든 정보 출력
SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'IT';
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 60;

-- 도시명이 Seattle 이라는 도시에 근무하는 사원들의 모든 정보 출력
SELECT LOCATION_ID FROM LOCATIONS WHERE CITY = 'Seattle';
SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID = 1700;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 30; -- id가 너무 많음...


-- 서브쿼리
-- 사원의 사원번호, 성, 이름, 월급의 평균 급여보다 많이 받는 직원들을 조회
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);

-- 월급을 가장 많이 받는 사원과 같은 부서에 근무하는 사원들의 평균 급여를 출력
SELECT AVG(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID =
    (
        SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID =
        (
            SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE SALARY =
            (
                SELECT MAX(SALARY) FROM EMPLOYEES
            )
        )
    );

-- 1.사번이 198인 사원이 근무하는 부서가 있는 도시가 속해 있는 나라가 있는 대륙 정보
SELECT REGION_NAME FROM REGIONS WHERE REGION_ID =
(
    SELECT REGION_ID FROM COUNTRIES WHERE COUNTRY_ID =
    (
        SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID =
        (
            SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID =
            (
                SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 198
            )
        )
    )
);

-- 2.LAST_NAME이 Khoo인 사람의 근무하는 부서명
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID =
(
    SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME = 'Khoo'
);

-- 3.사원번호가 199번인 사원의 매니저가 근무하는 부서가 있는 나라명 출력
SELECT COUNTRY_NAME FROM COUNTRIES WHERE COUNTRY_ID =
(
    SELECT COUNTRY_ID FROM LOCATIONS WHERE LOCATION_ID =
    (
        SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID =
        (
            SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 199
        )
    )
);

-- 4.사원들 중에서 월급이 가장 적은 사원이 근무하는 도시명
SELECT CITY FROM LOCATIONS WHERE LOCATION_ID =
(
    SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID =
    (
        SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID =
        (
            SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE SALARY =
            (
                SELECT MIN(SALARY) FROM EMPLOYEES
            )
        )
    )
);

-- 5.부서명이 IT인 부서에 근무하는 사원들의 모든 정보 출력
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID =
(
    SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'IT'
);



-- 급여가 평균급여보다 많이 받는 사원들이 근무하는 부서정보 출력
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID IN (
    (
    SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE SALARY > 
        (
            SELECT AVG(SALARY) FROM EMPLOYEES
        )
    )
);


SELECT LAST_NAME, SALARY
FROM EMPLOYEES
WHERE EXISTS (SELECT * FROM EMPLOYEES WHERE SALARY = 2100);


-- 6.Employees 테이블에서 LAST_NAME이 Greenberg 사원보다 급여를 더 많이 받고 있는 사원들정보 출력
SELECT * FROM EMPLOYEES WHERE SALARY >
(
    SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Greenberg'
);


-- 7.부서별 최소급여를 받고 있는 사원의 정보 출력
SELECT * FROM EMPLOYEES WHERE SALARY IN
(
    SELECT MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID
)
ORDER BY DEPARTMENT_ID;
-----해답
SELECT * FROM EMPLOYEES WHERE (DEPARTMENT_ID, SALARY) IN (SELECT DEPARTMENT_ID, MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID) ORDER BY DEPARTMENT_ID;
-----해답


-- 8.도시이름이 'S'로시작하는 지역에 근무하는 사원의 정보 출력
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN
(
    SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID IN
    (
        SELECT LOCATION_ID FROM LOCATIONS WHERE CITY LIKE 'S%'
    )
);


-- 9.성이 Austin인 사원의 매니저(상사)가 근무하는 부서의 평균 급여보다 많이 받는 부서의 이름
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID IN
(
    SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE SALARY > 
    (
        SELECT AVG(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID =
        (
            SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE MANAGER_ID =
            (
                SELECT MANAGER_ID FROM EMPLOYEES WHERE LAST_NAME = 'Austin'
            )
        )
    )
);
----- 해답
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID IN 
(
    SELECT DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING AVG(SALARY)>
     (
        SELECT AVG(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 
        (
            SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME ='Austin'
        )
    )
);
----- 해답


