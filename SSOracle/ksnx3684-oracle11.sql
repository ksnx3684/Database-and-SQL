SELECT * FROM NOTICE;
DROP TABLE NOTICE;

SELECT * FROM TAB;

SELECT * FROM USER_CONSTRAINTS;

DROP VIEW EMP_DETAILS_VIEW;
DROP TABLE JOB_HISTORY;
DROP TABLE JOBS;

ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건이름;
-- EMPLOYEES 에서 MANAGER_ID 외래키 삭제
ALTER TABLE EMPLOYEES DROP CONSTRAINT EMP_MANAGER_FK;
-- DEPARTMENTS MANAGER_ID 외래키 삭제
ALTER TABLE DEPARTMENTS DROP CONSTRAINT DEPT_MGR_FK;
-- EMPLOYEES 삭제
DROP TABLE EMPLOYEES;
DROP TABLE DEPARTMENTS;
DROP TABLE LOCATIONS;

DROP TABLE COUNTRIES;
DROP TABLE REGIONS;

SELECT * FROM SEQ;

DROP SEQUENCE CART_SEQ; 
DROP SEQUENCE PRODUCT_SEQ;

COMMIT;



----- BANKBOOK

CREATE TABLE BANKBOOK (
    BOOKNUMBER NUMBER CONSTRAINT BB_BN_PK PRIMARY KEY,
    BOOKNAME VARCHAR2(100),
    BOOKCONTENTS VARCHAR2(4000),
    BOOKRATE NUMBER(3,2),
    BOOKSALE NUMBER(1)
);
CREATE SEQUENCE BANKBOOK_SEQ;

DESC BANKBOOK;

COMMIT;

SELECT * FROM BANKBOOK;

DELETE BANKBOOK WHERE BOOKNUMBER = 1;

SELECT BOOKNUMBER, BOOKNAME, BOOKRATE, BOOKSALE FROM BANKBOOK
WHERE BOOKNUMBER
BETWEEN (SELECT MAX(BOOKNUMBER)-9 FROM BANKBOOK) AND (SELECT MAX(BOOKNUMBER) FROM BANKBOOK)
ORDER BY BOOKNUMBER DESC;

SELECT BANKBOOK_SEQ.NEXTVAL, BANKBOOK_SEQ.CURRVAL FROM DUAL;


---------- PAGING
----- ROWNUM
-- 조회결과로 컬럼명을 변경 또는 없던 컬럼명을 생성할 수 있음 (별칭)
SELECT BOOKNUMBER BN FROM BANKBOOK;
SELECT COUNT(BOOKNUMBER) FROM BANKBOOK;

SELECT BOOKNUMBER FROM BANKBOOK WHERE BOOKRATE > (SELECT AVG(BOOKRATE) FROM BANKBOOK);


SELECT * FROM
(SELECT * FROM BANKBOOK ORDER BY BOOKNUMBER DESC) 
WHERE ROWNUM BETWEEN 1 AND 10; -- 서브쿼리문에서 먼저 정렬을 시킨 후 그 서브쿼리문을 가상의 테이블형식으로 생각하고 FROM 구문으로 불러온다
-- ROWNUM은 1번부터 조회가 가능하다. 중간 번호 부터는 조회 불가

SELECT * FROM
    (SELECT ROWNUM R, B.* FROM -- ROWNUM을 별칭 R로 주어 컬럼 하나 추가 후 B조회
        (SELECT * FROM BANKBOOK WHERE BOOKNUMBER > 0 AND BOOKNAME LIKE '%1%'
            ORDER BY BOOKNUMBER DESC) B) -- 서브쿼리문의 별칭을 B (별칭을 주는 이유는 바로위에 별칭 R과 함께 조회하기 위해)
WHERE R BETWEEN 11 AND 20; -- ROWNUM이 아닌 별칭 R로 조회하면 중간 번호에서도 조회 가능

SELECT COUNT(BOOKNUMBER) FROM BANKBOOK;


------ 검색 추가
-- bookname에 '1'이 포함되어 있는 것을 검색
SELECT * FROM BANKBOOK WHERE BOOKNAME LIKE '%1%';






----- NOTICE

CREATE TABLE NOTICE(
    NUM NUMBER CONSTRAINT NOTICE_NUM_PK PRIMARY KEY,
    TITLE VARCHAR2(100),
    CONTENTS VARCHAR2(4000),
    WRITER VARCHAR2(100),
    REGDATE DATE,
    HIT NUMBER
);
CREATE SEQUENCE NOTICE_SEQ;

DESC NOTICE;

SELECT * FROM SEQ;

SELECT * FROM NOTICE;



----- MEMBER

CREATE TABLE MEMBER(
    ID VARCHAR2(100),
    PW VARCHAR2(100),
    NAME VARCHAR2(100),
    PHONE VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL,
    
    CONSTRAINT MEMBER_ID_PK PRIMARY KEY (ID),
    CONSTRAINT MEMBER_PHONE_UK UNIQUE (PHONE),
    CONSTRAINT MEMBER_EMAIL_UK UNIQUE (EMAIL)
);

INSERT INTO MEMBER (ID, PW, NAME, PHONE, EMAIL)
VALUES ('ID1', 'PW1', 'NAME1', '010-1234-5678','ID1@NAVER.COM');

SELECT * FROM MEMBER;
DESC MEMBER;
DROP TABLE MEMBER;
rollback;

COMMIT;

SELECT PW FROM MEMBER WHERE ID = 'id3';

