----- DDL -----
----- ALTER, SEQUENCE -----


SELECT * FROM TAB;
SELECT * FROM STUDENT;
SELECT * FROM POINT;
SELECT * FROM MEMBER;
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'MEMBER';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'BBS';

CREATE TABLE STUDENT (
    NUM NUMBER PRIMARY KEY,
    NAME VARCHAR(10),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(30)
);
CREATE TABLE POINT (
    NO NUMBER CONSTRAINT POINT_NO_PK PRIMARY KEY,
    --NUM NUMBER CONSTRAINT POINT_NUM_FK REFERENCES STUDENT(NUM) ON DELETE CASCADE, -- ON DELETE CASCADE로 부모와 자식을 동시 삭제 할 수 있다.
    NUM NUMBER CONSTRAINT POINT_NUM_FK REFERENCES STUDENT(NUM) ON DELETE SET NULL,
    KOR NUMBER(3),
    ENG NUMBER(3) CONSTRAINT PT_ENG_C CHECK (ENG BETWEEN 0 AND 100),
    MATH NUMBER(3),
    TOTAL NUMBER(3),
    MEAN NUMBER(5, 2) DEFAULT 0.00
);

INSERT INTO STUDENT VALUES(10, 'LBH', '010-1234-5678', 'KSNX3684@NAVER.COM', 'SEOUL');
INSERT INTO STUDENT VALUES(20, 'KBH', '010-1234-5678', 'KSNX3684@NAVER.COM', 'BUSAN');
INSERT INTO STUDENT VALUES(30, 'PKH', '010-1234-5678', 1, 28);
INSERT INTO MEMBER VALUES(40, 'PKH', '010-1234-5678', 1, 28);
INSERT INTO POINT VALUES(1, 10, 90, 80, 70, 250, 83);
INSERT INTO POINT VALUES(2, 20, 100, 50, 50, 200, 67);
INSERT INTO POINT VALUES(3, 20, 100, 50, 50, 200, 67);


DELETE STUDENT WHERE NUM = 10;
DELETE POINT WHERE NUM = 10;



------------------------------ ALTER ------------------------------

ALTER TABLE STUDENT ADD (ADDRESS VARCHAR2(100)); -- 컬럼 추가
ALTER TABLE STUDENT DROP COLUMN ADDRESS; -- 컬럼 삭제
ALTER TABLE STUDENT RENAME COLUMN PHONE TO MOBILE; -- 컬럼명 변경
UPDATE STUDENT SET EMAIL = NULL; -- 컬럼의 데이터타입 변경 전 해당 컬럼의 모든 데이터를 NULL값으로 변경
ALTER TABLE STUDENT MODIFY (EMAIL NUMBER); -- 컬럼의 데이터타입 변경

-- Student Table에 학생의 나이를 담을 컬럼을 추가
ALTER TABLE STUDENT ADD (AGE NUMBER(3) CONSTRAINT ST_AGE_C CHECK (AGE BETWEEN 1 AND 150));

-- AGE를 NUMBER(4)
ALTER TABLE STUDENT MODIFY (AGE NUMBER(4));

-- RENAME
RENAME STUDENT TO MEMBER;


-- 게시판
-- 번호, 제목, 작성자, 작성날짜, 조회수, 글내용
CREATE TABLE BBS (
    BOARDNUM NUMBER,
    TITLE VARCHAR2(200),
    WRITER NUMBER ,--VARCHAR2(10),
    CONTENTS VARCHAR2(4000),
    REGDATE DATE,
    HIT NUMBER
);
ALTER TABLE BBS ADD CONSTRAINT BBS_BN_PK PRIMARY KEY (BOARDNUM); -- 새로운 제약 조건 추가
ALTER TABLE BBS ADD CONSTRAINT BBS_NAME_FK FOREIGN KEY (WRITER) REFERENCES MEMBER (NUM);
ALTER TABLE BBS DROP CONSTRAINT BBS_BN_PK; -- 기존 제약 조건 삭제
ALTER TABLE BBS DROP CONSTRAINT BBS_NAME_FK;

INSERT INTO BBS
VALUES (BBS_SEQ.NEXTVAL, 't2', 20, 'c2', SYSDATE, 0);
SELECT * FROM BBS;
DELETE BBS;
DELETE BBS WHERE BOARDNUM = 1;

------------------------------ SEQUENCE ------------------------------
SELECT * FROM SEQ;

SELECT BBS_SEQ.NEXTVAL FROM DUAL;
SELECT BBS_SEQ.CURRVAL FROM DUAL;

CREATE SEQUENCE BBS_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE;

DROP SEQUENCE BBS_SEQ;


DROP TABLE STUDENT;
DROP TABLE POINT;
DROP TABLE BBS;
DROP TABLE MEMBER;

SELECT * FROM RECYCLEBIN;


-------------------- 쇼핑몰 예제 --------------------
---------- TABLE 생성 ----------
CREATE TABLE ACCOUNT (
    ID VARCHAR2(20) CONSTRAINT AC_ID_PK PRIMARY KEY,
    PW VARCHAR2(20) NOT NULL,
    NAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(20) CONSTRAINT AC_PHONE_U UNIQUE,
    EMAIL VARCHAR2(50) CONSTRAINT AC_EMAIL_U UNIQUE
);
CREATE TABLE PRODUCT (
    PRODUCTNO NUMBER CONSTRAINT PR_NO_PK PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    PRICE NUMBER NOT NULL,
    AMOUNT NUMBER NOT NULL
);
CREATE TABLE CART (
    CARTNO NUMBER CONSTRAINT CA_NO_PK PRIMARY KEY,
    PRODUCTNO NUMBER CONSTRAINT CA_PRNO_FK REFERENCES PRODUCT ON DELETE SET NULL,
    AMOUNT NUMBER,
    TOTAL NUMBER,
    ID VARCHAR(20) CONSTRAINT CA_ID_FK REFERENCES ACCOUNT(ID) ON DELETE CASCADE
);

SELECT * FROM ACCOUNT;
SELECT * FROM PRODUCT;
SELECT * FROM CART;

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'ACCOUNT';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'PRODUCT';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'CART';


---------- SEQUENCE ----------
CREATE SEQUENCE PRODUCT_SEQ;
CREATE SEQUENCE CART_SEQ;
SELECT * FROM SEQ;
DROP SEQUENCE PRODUCT_SEQ;
DROP SEQUENCE CART_SEQ;

INSERT INTO PRODUCT
VALUES (PRODUCT_SEQ.NEXTVAL, 'P1', 30000, 50);
INSERT INTO PRODUCT
VALUES (PRODUCT_SEQ.NEXTVAL, 'P2', 60000, 100);

COMMIT;

DROP TABLE ACCOUNT;
DROP TABLE PRODUCT;
DROP TABLE CART;



